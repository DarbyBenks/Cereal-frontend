{"ast":null,"code":"var _jsxFileName = \"/Users/timurmishiev/burger-hub-frontend/src/components/App.js\";\nimport React from 'react';\nimport Burger from './Burger';\nimport Header from './Header';\nimport Order from './Order';\nimport MenuAdmin from './MenuAdmin';\nimport GetBurgers from '../actions/getBurgers';\nimport CreateBurger from '../actions/createBurger';\nimport LoginUser from './LoginUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      burgers: [],\n      order: {}\n    };\n\n    this.addBurger = burger => {\n      // CreateBurger.postBurger(burger).then(burger => console.log(\"Created Burger\", burger))\n      CreateBurger.postBurger(burger).then(burger => this.setState({\n        burgers: this.state.burgers.concat(burger)\n      }));\n    };\n\n    this.addToOrder = key => {\n      // make a  copy of a state object \n      const order = { ...this.state.order\n      }; // add a key to an order with 1 , or reshresh current state of an order\n\n      order[key] = order[key] + 1 || 1; // add new order object to state of an order \n\n      this.setState({\n        order: order\n      });\n    };\n\n    this.deleteFromOrder = key => {\n      const order = { ...this.state.order\n      };\n      delete order[key];\n      this.setState({\n        order: order\n      }); // this.setState( { order });\n    };\n  }\n\n  // updateBurger = (key, updatedBurger) => {\n  //   const burgers = {...this.state.burgers }; \n  //   burgers[key] = updatedBurger;\n  //   this.setState({ burgers });\n  // }\n  componentDidMount() {\n    GetBurgers.fetchBurgers().then(burgers => this.setState({\n      burgers\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"burger-paradise\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          title: \"Hot Burgers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"burgers\",\n          children: this.state.burgers.map(burger => {\n            return /*#__PURE__*/_jsxDEV(Burger, {\n              index: burger.id,\n              name: burger.name,\n              price: burger.price,\n              description: burger.description,\n              status: burger.status,\n              image: burger.image,\n              addToOrder: this.addToOrder\n            }, burger.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Order, {\n        deleteFromOrder: this.deleteFromOrder,\n        burgers: this.state.burgers,\n        order: this.state.order\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuAdmin, {\n        addBurger: this.addBurger,\n        burgers: this.state.burgers // updateBurger={this.updateBurger}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/timurmishiev/burger-hub-frontend/src/components/App.js"],"names":["React","Burger","Header","Order","MenuAdmin","GetBurgers","CreateBurger","LoginUser","App","Component","state","burgers","order","addBurger","burger","postBurger","then","setState","concat","addToOrder","key","deleteFromOrder","componentDidMount","fetchBurgers","render","map","id","name","price","description","status","image"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Burger from './Burger';\nimport Header from './Header';\nimport Order from './Order';\nimport MenuAdmin from './MenuAdmin';\nimport GetBurgers from '../actions/getBurgers';\nimport CreateBurger from '../actions/createBurger';\nimport LoginUser from './LoginUser'\n\n\n\nclass App extends React.Component {\n \n\n  state = {\n    burgers: [],\n    order: {}\n  };\n\n\n  addBurger = burger => {\n    // CreateBurger.postBurger(burger).then(burger => console.log(\"Created Burger\", burger))\n    CreateBurger.postBurger(burger).then(burger => this.setState({\n      burgers: this.state.burgers.concat(burger)\n    }))\n  }\n\n  // deleteBurger = (key) => {\n  //   const burgers = { ...this.state.burgers };\n\n  //   delete burgers[key]\n  \n  // };\n\n\n\n  addToOrder = (key) => {\n    // make a  copy of a state object \n    const order = {...this.state.order}\n    // add a key to an order with 1 , or reshresh current state of an order\n    order[key] = order[key] + 1 || 1;\n    // add new order object to state of an order \n    this.setState({ order: order })\n\n  };\n  \n\n  deleteFromOrder = key => {\n    const order = { ...this.state.order };\n    delete order[key]\n    this.setState({ order: order })\n    // this.setState( { order });\n  };\n\n  // updateBurger = (key, updatedBurger) => {\n  //   const burgers = {...this.state.burgers }; \n  //   burgers[key] = updatedBurger;\n\n  //   this.setState({ burgers });\n  // }\n\n \n\n\n \n  componentDidMount() {\n     GetBurgers.fetchBurgers()\n     .then(burgers => this.setState({ burgers }))\n  }\n\n\n  render() {\n    return (\n      \n        <div className='burger-paradise'>\n          \n          <div className='menu'>\n          \n            <Header title='Hot Burgers' />\n            \n            <ul className='burgers'>\n              {this.state.burgers.map(burger => {\n                return <Burger \n                  key={burger.id}\n                  index={burger.id}\n                  name={burger.name}\n                  price={burger.price}\n                  description={burger.description}\n                  status={burger.status}\n                  image={burger.image}\n                  addToOrder={this.addToOrder}\n                 />;\n              })}\n            </ul>\n            \n          </div>\n          <Order \n            deleteFromOrder={this.deleteFromOrder}\n            burgers={this.state.burgers} \n            order={this.state.order}\n          />\n           \n          <MenuAdmin \n           \n            addBurger={this.addBurger}\n            \n            burgers={this.state.burgers}\n            // updateBurger={this.updateBurger}\n           \n          /> \n         \n         \n        </div>\n    \n    );\n  }\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}