{"ast":null,"code":"var _jsxFileName = \"/Users/timurmishiev/burger-hub-frontend/src/components/Order.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Order extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderOrder = key => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n      const isAvailable = burger && burger.status === 'available';\n\n      if (!isAvailable) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"unavalable\",\n          children: [\"Sorry, \", burger ? burger.name : 'burger', \" temporary sold out\"]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 9\n          }, this), \"item: \", burger.name, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", count * burger.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.props.deleteFromOrder(key),\n            className: \"cancelItem\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this);\n    };\n  }\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n      const isAvailable = burger && burger.status === 'available';\n\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      }\n\n      return prevTotal;\n    }, 0);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"order\",\n        children: orderIds.map(this.renderOrder)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total_wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total_wrap-final\",\n            children: [\"Total: $ \", total]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nexport default Order;","map":{"version":3,"sources":["/Users/timurmishiev/burger-hub-frontend/src/components/Order.js"],"names":["React","Order","Component","renderOrder","key","burger","props","burgers","count","order","isAvailable","status","name","price","deleteFromOrder","render","orderIds","Object","keys","total","reduce","prevTotal","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAElCC,WAFkC,GAEnBC,GAAD,IAAS;AACrB,YAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBH,GAAnB,CAAf;AACA,YAAMI,KAAK,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd;AAEA,YAAMM,WAAW,GAAGL,MAAM,IAAIA,MAAM,CAACM,MAAP,KAAkB,WAAhD;;AACE,UAAI,CAACD,WAAL,EAAkB;AAChB,4BACA;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,gCACUL,MAAM,GAAGA,MAAM,CAACO,IAAV,GAAiB,QADjC;AAAA,WAAgCR,GAAhC;AAAA;AAAA;AAAA;AAAA,gBADA;AAKD;;AAEH,0BACA;AAAA,+BACE;AAAA,kCACE;AAAA,sBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,kBADF,YAESH,MAAM,CAACO,IAFhB,eAGE;AAAA,4BAAQJ,KAAK,GAAGH,MAAM,CAACQ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AACE,YAAA,OAAO,EAAE,MAAM,KAAKP,KAAL,CAAWQ,eAAX,CAA2BV,GAA3B,CADjB;AAEE,YAAA,SAAS,EAAC,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAASA,GAAT;AAAA;AAAA;AAAA;AAAA,cADA;AAaD,KA5BiC;AAAA;;AA8BlCW,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKZ,KAAL,CAAWG,KAAvB,CAAjB;AACA,UAAMU,KAAK,GAAGH,QAAQ,CAACI,MAAT,CAAgB,CAACC,SAAD,EAAYjB,GAAZ,KAAoB;AAChD,YAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBH,GAAnB,CAAf;AACA,YAAMI,KAAK,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd;AAEA,YAAMM,WAAW,GAAGL,MAAM,IAAIA,MAAM,CAACM,MAAP,KAAiB,WAA/C;;AACA,UAAID,WAAJ,EAAiB;AACf,eAAOW,SAAS,GAAGhB,MAAM,CAACQ,KAAP,GAAeL,KAAlC;AACD;;AAED,aAAOa,SAAP;AACD,KAVa,EAUX,CAVW,CAAd;AAYA,wBACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,kBACGL,QAAQ,CAACM,GAAT,CAAa,KAAKnB,WAAlB;AADH;AAAA;AAAA;AAAA;AAAA,cAFH,eAKG;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,oCACYgB,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALH;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAeD;;AA3DiC;;AA6DpC,eAAelB,KAAf","sourcesContent":["import React from 'react';\n\n\nclass Order extends React.Component {\n\n  renderOrder = (key) => {\n    const burger = this.props.burgers[key];\n    const count = this.props.order[key];\n\n    const isAvailable = burger && burger.status === 'available';\n      if (!isAvailable) {\n        return (\n        <li className='unavalable' key={key}>\n          Sorry, {burger ? burger.name : 'burger'} temporary sold out\n        </li>\n        );\n      }\n\n    return( \n    <li key={key}>\n      <span>\n        <span>{count}</span>\n        item: {burger.name}\n        <span>${count * burger.price}</span>\n        <button \n          onClick={() => this.props.deleteFromOrder(key)}\n          className='cancelItem'\n          >&times;</button>\n      </span>\n    </li>\n    );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order)\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n\n      const isAvailable = burger && burger.status ==='available';\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      }\n\n      return prevTotal \n    }, 0);\n\n    return (\n     <div className='order-wrap'>\n        <h2>Your Order</h2>\n        <ul className='order'>\n          {orderIds.map(this.renderOrder)} \n        </ul>\n        <div className='total'>\n          <div className='total_wrap'>\n            <div className='total_wrap-final'>\n              Total: $ {total}\n            </div>\n          </div>\n        </div>\n     </div>\n    );\n  }\n}\nexport default Order;"]},"metadata":{},"sourceType":"module"}