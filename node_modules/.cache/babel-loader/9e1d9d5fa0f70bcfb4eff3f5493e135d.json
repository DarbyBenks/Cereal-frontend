{"ast":null,"code":"var _jsxFileName = \"/Users/timurmishiev/burger-hub-frontend/src/components/App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport MenuAdmin from './MenuAdmin';\nimport Burger from './Burger';\nimport sampleBurgers from '../sample-burgers';\nimport base from '../base';\nimport firebase from 'firebase/app';\nimport SignIn from './Auth/SignIn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      burgers: {},\n      order: {}\n    };\n\n    this.addBurger = burger => {\n      // 1. Делаем копию объекта state\n      const burgers = { ...this.state.burgers\n      }; // 2. Добавить новый бургер в переменную burgers\n\n      burgers[`burger${Date.now()}`] = burger; // 3. Записать наш новый объект burgers в state\n\n      this.setState({\n        burgers\n      });\n    };\n\n    this.updateBurger = (key, updatedBurger) => {\n      // 1. Делаем копию объекта state\n      const burgers = { ...this.state.burgers\n      }; // 2. Обновляем нужный burger\n\n      burgers[key] = updatedBurger; // 3. Записать наш новый объект burgers в state\n\n      this.setState({\n        burgers\n      });\n    };\n\n    this.deleteBurger = key => {\n      // 1. Делаем копию объекта state\n      const burgers = { ...this.state.burgers\n      }; // 2. Удаляем burger\n\n      burgers[key] = null; // 3. Записать наш новый объект burgers в state\n\n      this.setState({\n        burgers\n      });\n    };\n\n    this.loadSampleBurgers = () => {\n      this.setState({\n        burgers: sampleBurgers\n      });\n    };\n\n    this.addToOrder = key => {\n      // 1. Делаем копию объекта state\n      const order = { ...this.state.order\n      }; // 2. Добавить ключ к заказу со знач-ем 1, либо обновить текущ. знач.\n\n      order[key] = order[key] + 1 || 1; // 3. Записать наш новый объект order в state\n\n      this.setState({\n        order\n      });\n    };\n\n    this.deleteFromOrder = key => {\n      // 1. Делаем копию объекта state\n      const order = { ...this.state.order\n      }; // 2. Удаляем burger\n\n      delete order[key]; // 3. Записать наш новый объект order в state\n\n      this.setState({\n        order\n      });\n    };\n\n    this.handleLogout = async () => {\n      await firebase.auth().signOut();\n      window.location.reload();\n    };\n  }\n\n  componentDidMount() {\n    const {\n      params\n    } = this.props.match;\n    const localStorageRef = localStorage.getItem(params.restaurantId);\n\n    if (localStorageRef) {\n      this.setState({\n        order: JSON.parse(localStorageRef)\n      });\n    }\n\n    this.ref = base.syncState(`${params.restaurantId}/burgers`, {\n      context: this,\n      state: 'burgers'\n    });\n  }\n\n  componentDidUpdate() {\n    const {\n      params\n    } = this.props.match;\n    localStorage.setItem(params.restaurantId, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"burger-paradise\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          title: \"Hot Burgers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuAdmin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nApp.propTypes = {\n  match: PropTypes.object\n};\nexport default App;","map":{"version":3,"sources":["/Users/timurmishiev/burger-hub-frontend/src/components/App.js"],"names":["React","PropTypes","Header","Order","MenuAdmin","Burger","sampleBurgers","base","firebase","SignIn","App","Component","state","burgers","order","addBurger","burger","Date","now","setState","updateBurger","key","updatedBurger","deleteBurger","loadSampleBurgers","addToOrder","deleteFromOrder","handleLogout","auth","signOut","window","location","reload","componentDidMount","params","props","match","localStorageRef","localStorage","getItem","restaurantId","JSON","parse","ref","syncState","context","componentDidUpdate","setItem","stringify","componentWillUnmount","removeBinding","render","propTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport MenuAdmin from './MenuAdmin';\nimport Burger from './Burger';\nimport sampleBurgers from '../sample-burgers';\nimport base from '../base';\nimport firebase from 'firebase/app';\nimport SignIn from './Auth/SignIn';\n\nclass App extends React.Component {\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  state = {\n    burgers: {},\n    order: {}\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n\n    const localStorageRef = localStorage.getItem(params.restaurantId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.restaurantId}/burgers`, {\n      context: this,\n      state: 'burgers'\n    });\n  }\n\n  componentDidUpdate() {\n    const { params } = this.props.match;\n    localStorage.setItem(params.restaurantId, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addBurger = burger => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    // 2. Добавить новый бургер в переменную burgers\n    burgers[`burger${Date.now()}`] = burger;\n    // 3. Записать наш новый объект burgers в state\n    this.setState({ burgers });\n  };\n\n  updateBurger = (key, updatedBurger) => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    // 2. Обновляем нужный burger\n    burgers[key] = updatedBurger;\n    // 3. Записать наш новый объект burgers в state\n    this.setState({ burgers });\n  };\n\n  deleteBurger = key => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    // 2. Удаляем burger\n    burgers[key] = null;\n    // 3. Записать наш новый объект burgers в state\n    this.setState({ burgers });\n  };\n\n  loadSampleBurgers = () => {\n    this.setState({ burgers: sampleBurgers });\n  };\n\n  addToOrder = key => {\n    // 1. Делаем копию объекта state\n    const order = { ...this.state.order };\n    // 2. Добавить ключ к заказу со знач-ем 1, либо обновить текущ. знач.\n    order[key] = order[key] + 1 || 1;\n    // 3. Записать наш новый объект order в state\n    this.setState({ order });\n  };\n\n  deleteFromOrder = key => {\n    // 1. Делаем копию объекта state\n    const order = { ...this.state.order };\n    // 2. Удаляем burger\n    delete order[key];\n    // 3. Записать наш новый объект order в state\n    this.setState({ order });\n  };\n\n  handleLogout = async () => {\n    await firebase.auth().signOut();\n    window.location.reload();\n  };\n\n  render() {\n    return (\n    \n        <div className='burger-paradise'>\n          <div className='menu'>\n            <Header title='Hot Burgers' />\n          \n          </div>\n          <Order\n          />\n          <MenuAdmin />\n       \n        </div>\n    \n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}