{"ast":null,"code":"var _jsxFileName = \"/Users/timurmishiev/burger-hub-frontend/src/components/Order.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Order extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderOrder = key => {};\n  }\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n      const isAvailable = burger && burger.status === 'available';\n\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      }\n\n      return prevTotal;\n    }, 0);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"order\",\n        children: orderIds.map(this.renderOrder)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 6\n      }, this), total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nexport default Order;","map":{"version":3,"sources":["/Users/timurmishiev/burger-hub-frontend/src/components/Order.js"],"names":["React","Order","Component","renderOrder","key","render","orderIds","Object","keys","props","order","total","reduce","prevTotal","burger","burgers","count","isAvailable","status","price","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAElCC,WAFkC,GAEnBC,GAAD,IAAS,CAEtB,CAJiC;AAAA;;AAKlCC,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,KAAvB,CAAjB;AACA,UAAMC,KAAK,GAAGL,QAAQ,CAACM,MAAT,CAAgB,CAACC,SAAD,EAAYT,GAAZ,KAAoB;AAChD,YAAMU,MAAM,GAAG,KAAKL,KAAL,CAAWM,OAAX,CAAmBX,GAAnB,CAAf;AACA,YAAMY,KAAK,GAAE,KAAKP,KAAL,CAAWC,KAAX,CAAiBN,GAAjB,CAAb;AAEA,YAAMa,WAAW,GAAGH,MAAM,IAAIA,MAAM,CAACI,MAAP,KAAiB,WAA/C;;AACA,UAAID,WAAJ,EAAiB;AACf,eAAOJ,SAAS,GAAGC,MAAM,CAACK,KAAP,GAAeH,KAAlC;AACD;;AAED,aAAOH,SAAP;AACD,KAVa,EAUX,CAVW,CAAd;AAWA,wBACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,kBAAuBP,QAAQ,CAACc,GAAT,CAAa,KAAKjB,WAAlB;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFA,EAICQ,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAQD;;AA1BiC;;AA4BpC,eAAeV,KAAf","sourcesContent":["import React from 'react';\n\n\nclass Order extends React.Component {\n\n  renderOrder = (key) => {\n\n  }\n  render() {\n    const orderIds = Object.keys(this.props.order)\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count =this.props.order[key];\n\n      const isAvailable = burger && burger.status ==='available';\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      }\n\n      return prevTotal \n    }, 0);\n    return (\n     <div className='order-wrap'>\n     <h2>Your Order</h2>\n     <ul className='order'>{orderIds.map(this.renderOrder)\n     }</ul>\n     {total}\n     </div>\n    );\n  }\n}\nexport default Order;"]},"metadata":{},"sourceType":"module"}