{"ast":null,"code":"var _jsxFileName = \"/Users/timurmishiev/burger-hub-frontend/src/components/Order.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Order extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderOrder = key => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n      const isAvailable = burger && burger.status === 'available';\n\n      if (!isAvailable) {}\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 12\n      }, this);\n    };\n  }\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n      const isAvailable = burger && burger.status === 'available';\n\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      }\n\n      return prevTotal;\n    }, 0);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"order\",\n        children: orderIds.map(this.renderOrder)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }, this), total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nexport default Order;","map":{"version":3,"sources":["/Users/timurmishiev/burger-hub-frontend/src/components/Order.js"],"names":["React","Order","Component","renderOrder","key","burger","props","burgers","count","order","isAvailable","status","render","orderIds","Object","keys","total","reduce","prevTotal","price","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAElCC,WAFkC,GAEnBC,GAAD,IAAS;AACrB,YAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBH,GAAnB,CAAf;AACA,YAAMI,KAAK,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd;AAEA,YAAMM,WAAW,GAAGL,MAAM,IAAIA,MAAM,CAACM,MAAP,KAAkB,WAAhD;;AACE,UAAI,CAACD,WAAL,EAAkB,CAAE;;AAEtB,0BAAO;AAAA,kBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,cAAP;AAED,KAXiC;AAAA;;AAYlCQ,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKT,KAAL,CAAWG,KAAvB,CAAjB;AACA,UAAMO,KAAK,GAAGH,QAAQ,CAACI,MAAT,CAAgB,CAACC,SAAD,EAAYd,GAAZ,KAAoB;AAChD,YAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBH,GAAnB,CAAf;AACA,YAAMI,KAAK,GAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAb;AAEA,YAAMM,WAAW,GAAGL,MAAM,IAAIA,MAAM,CAACM,MAAP,KAAiB,WAA/C;;AACA,UAAID,WAAJ,EAAiB;AACf,eAAOQ,SAAS,GAAGb,MAAM,CAACc,KAAP,GAAeX,KAAlC;AACD;;AAED,aAAOU,SAAP;AACD,KAVa,EAUX,CAVW,CAAd;AAWA,wBACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,kBACGL,QAAQ,CAACO,GAAT,CAAa,KAAKjB,WAAlB;AADH;AAAA;AAAA;AAAA;AAAA,cAFA,EAKCa,KALD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AASD;;AAlCiC;;AAoCpC,eAAef,KAAf","sourcesContent":["import React from 'react';\n\n\nclass Order extends React.Component {\n\n  renderOrder = (key) => {\n    const burger = this.props.burgers[key];\n    const count = this.props.order[key];\n\n    const isAvailable = burger && burger.status === 'available';\n      if (!isAvailable) {}\n\n    return <li>{key}</li>;\n\n  }\n  render() {\n    const orderIds = Object.keys(this.props.order)\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count =this.props.order[key];\n\n      const isAvailable = burger && burger.status ==='available';\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      }\n\n      return prevTotal \n    }, 0);\n    return (\n     <div className='order-wrap'>\n     <h2>Your Order</h2>\n     <ul className='order'>\n       {orderIds.map(this.renderOrder)} \n     </ul>\n     {total}\n     </div>\n    );\n  }\n}\nexport default Order;"]},"metadata":{},"sourceType":"module"}