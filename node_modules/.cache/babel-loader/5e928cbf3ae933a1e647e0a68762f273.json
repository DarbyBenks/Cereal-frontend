{"ast":null,"code":"var _jsxFileName = \"/Users/timurmishiev/burger-hub-frontend/src/components/AddBurgerForm.js\";\n// container component\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddBurgerForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.nameRef = /*#__PURE__*/React.createRef();\n    this.priceRef = /*#__PURE__*/React.createRef();\n    this.statusRef = /*#__PURE__*/React.createRef();\n    this.descRef = /*#__PURE__*/React.createRef();\n    this.imageRef = /*#__PURE__*/React.createRef();\n\n    this.createBurger = event => {\n      event.preventDefault();\n      const burger = {\n        name: this.nameRef.current.value,\n        price: parseFloat(this.priceRef.current.value || 0),\n        status: this.statusRef.current.value,\n        description: this.descRef.current.value,\n        image: this.imageRef.current.value\n      };\n      this.props.addBurger(burger);\n      event.currentTarget.reset();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"burger-edit\",\n      onSubmit: this.createBurger,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: this.nameRef,\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"Name\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: this.priceRef,\n        name: \"price\",\n        type: \"text\",\n        placeholder: \"Price\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: this.statusRef,\n        name: \"status\",\n        className: \"status\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"available\",\n          children: \"Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"unavailable\",\n          children: \"Delete From the Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: this.descRef,\n        name: \"desc\",\n        placeholder: \"Desc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: this.imageRef,\n        name: \"image\",\n        type: \"text\",\n        placeholder: \"Image\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"+ Add to Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAddBurgerForm.propTypes = {\n  addBurger: PropTypes.func\n};\nexport default AddBurgerForm;","map":{"version":3,"sources":["/Users/timurmishiev/burger-hub-frontend/src/components/AddBurgerForm.js"],"names":["React","PropTypes","AddBurgerForm","Component","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createBurger","event","preventDefault","burger","name","current","value","price","parseFloat","status","description","image","props","addBurger","currentTarget","reset","render","propTypes","func"],"mappings":"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","sourcesContent":["// container component\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddBurgerForm extends React.Component {\n  \n  static propTypes = {\n    addBurger: PropTypes.func\n  };\n\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  createBurger = event => {\n    event.preventDefault();\n    const burger = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value || 0),\n      status: this.statusRef.current.value,\n      description: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addBurger(burger);\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className='burger-edit' onSubmit={this.createBurger}>\n        <input\n          ref={this.nameRef}\n          name='name'\n          type='text'\n          placeholder='Name'\n          autoComplete='off'\n        />\n        <input\n          ref={this.priceRef}\n          name='price'\n          type='text'\n          placeholder='Price'\n          autoComplete='off'\n        />\n        <select ref={this.statusRef} name='status' className='status'>\n          <option value='available'>Available</option>\n          <option value='unavailable'>Delete From the Menu</option>\n        </select>\n        <textarea ref={this.descRef} name='desc' placeholder='Desc' />\n        <input\n          ref={this.imageRef}\n          name='image'\n          type='text'\n          placeholder='Image'\n          autoComplete='off'\n        />\n        <button type='submit'>+ Add to Menu</button>\n      </form>\n    );\n  }\n}\nexport default AddBurgerForm; "]},"metadata":{},"sourceType":"module"}